// <auto-generated />
using System;
using KrediHesaplama.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace KrediHesaplama.Migrations
{
    [DbContext(typeof(KrediDbContext))]
    partial class KrediDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.0");

            modelBuilder.Entity("KrediHesaplama.Models.KrediBasvuru", b =>
                {
                    b.Property<int>("basvuruId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CreditTypeId")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsApproved")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsCancelled")
                        .HasColumnType("INTEGER");

                    b.Property<double>("Tutar")
                        .HasColumnType("REAL");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Vade")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("basvuruTarihi")
                        .HasColumnType("TEXT");

                    b.HasKey("basvuruId");

                    b.HasIndex("CreditTypeId");

                    b.HasIndex("UserId");

                    b.ToTable("KrediBasvurulari");
                });

            modelBuilder.Entity("KrediHesaplama.Models.KrediBasvuruLog", b =>
                {
                    b.Property<int>("basvurulogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CreditTypeId")
                        .HasColumnType("INTEGER");

                    b.Property<double>("Tutar")
                        .HasColumnType("REAL");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Vade")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("basvuruTarihi")
                        .HasColumnType("TEXT");

                    b.Property<bool>("isApproved")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("isCancelled")
                        .HasColumnType("INTEGER");

                    b.HasKey("basvurulogId");

                    b.ToTable("BasvuruLoglari");
                });

            modelBuilder.Entity("KrediHesaplama.Models.KrediHesaplamaKaydi", b =>
                {
                    b.Property<int>("KayitId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<double>("AylikOdeme")
                        .HasColumnType("REAL");

                    b.Property<int>("CreditTypeId")
                        .HasColumnType("INTEGER");

                    b.Property<double>("FaizOrani")
                        .HasColumnType("REAL");

                    b.Property<DateTime>("HesaplamaTarihi")
                        .HasColumnType("TEXT");

                    b.Property<double>("ToplamOdeme")
                        .HasColumnType("REAL");

                    b.Property<double>("Tutar")
                        .HasColumnType("REAL");

                    b.Property<int>("Vade")
                        .HasColumnType("INTEGER");

                    b.HasKey("KayitId");

                    b.ToTable("KrediHesaplamaKayitlari");
                });

            modelBuilder.Entity("KrediHesaplama.Models.KrediHesaplamaLog", b =>
                {
                    b.Property<int>("LogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<double>("AylikOdeme")
                        .HasColumnType("REAL");

                    b.Property<int>("CreditTypeId")
                        .HasColumnType("INTEGER");

                    b.Property<double>("FaizOrani")
                        .HasColumnType("REAL");

                    b.Property<DateTime>("HesaplamaTarihi")
                        .HasColumnType("TEXT");

                    b.Property<double>("ToplamOdeme")
                        .HasColumnType("REAL");

                    b.Property<double>("Tutar")
                        .HasColumnType("REAL");

                    b.Property<int>("Vade")
                        .HasColumnType("INTEGER");

                    b.HasKey("LogId");

                    b.ToTable("HesaplamaLoglari");
                });

            modelBuilder.Entity("KrediHesaplama.Models.KrediUrun", b =>
                {
                    b.Property<int>("CreditTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<double>("faizOrani")
                        .HasColumnType("REAL");

                    b.Property<double>("maxTutar")
                        .HasColumnType("REAL");

                    b.Property<int>("maxVade")
                        .HasColumnType("INTEGER");

                    b.Property<double>("minTutar")
                        .HasColumnType("REAL");

                    b.Property<int>("minVade")
                        .HasColumnType("INTEGER");

                    b.Property<string>("urunAdi")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("CreditTypeId");

                    b.ToTable("KrediUrunleri");

                    b.HasData(
                        new
                        {
                            CreditTypeId = 1,
                            faizOrani = 4.9900000000000002,
                            maxTutar = 100000.0,
                            maxVade = 36,
                            minTutar = 10000.0,
                            minVade = 3,
                            urunAdi = "İhtiyaç"
                        },
                        new
                        {
                            CreditTypeId = 2,
                            faizOrani = 2.9900000000000002,
                            maxTutar = 4000000.0,
                            maxVade = 120,
                            minTutar = 300000.0,
                            minVade = 3,
                            urunAdi = "Konut"
                        },
                        new
                        {
                            CreditTypeId = 3,
                            faizOrani = 3.9900000000000002,
                            maxTutar = 1000000.0,
                            maxVade = 60,
                            minTutar = 100000.0,
                            minVade = 3,
                            urunAdi = "Taşıt"
                        });
                });

            modelBuilder.Entity("KrediHesaplama.Models.LoginLog", b =>
                {
                    b.Property<int>("LogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Seviye")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("TEXT");

                    b.Property<int?>("UserId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("islemTuru")
                        .HasColumnType("TEXT");

                    b.HasKey("LogId");

                    b.ToTable("LoginLogs");
                });

            modelBuilder.Entity("KrediHesaplama.Models.SignupLog", b =>
                {
                    b.Property<int>("LogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Message")
                        .HasColumnType("TEXT");

                    b.Property<string>("TCKN")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("TEXT");

                    b.Property<int?>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("LogId");

                    b.ToTable("SignupLogs");
                });

            modelBuilder.Entity("KrediHesaplama.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Sifre")
                        .HasColumnType("TEXT");

                    b.Property<string>("TCKN")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("TEXT");

                    b.Property<string>("adSoyad")
                        .HasColumnType("TEXT");

                    b.HasKey("UserId");

                    b.HasIndex("TCKN")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("KrediHesaplama.Models.KrediBasvuru", b =>
                {
                    b.HasOne("KrediHesaplama.Models.KrediUrun", "KrediUrun")
                        .WithMany()
                        .HasForeignKey("CreditTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KrediHesaplama.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("KrediUrun");

                    b.Navigation("User");
                });
#pragma warning restore 612, 618
        }
    }
}
